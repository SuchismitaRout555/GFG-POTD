class Solution {
  public:
    Node* first;
  Node* second;
  Node* third;
  Node* prev;
  void solve(struct Node* root) { 
      if(root==NULL)
      return;
      solve(root->left);
      if(prev!=NULL&&prev->data>=root->data)
      {
          if(first==NULL) {
          first=prev;
          second=root;
          }
          else
          third=root;
     }
      prev=root;
      solve(root->right);
  }
    struct Node *correctBST(struct Node *root) {
      //code here 
        prev=new Node(INT_MIN);
        first=NULL;
         second=NULL;
         third=NULL;
       
      solve(root);
       if(first!=NULL&&third!=NULL)
       swap(first->data,third->data);
       else if(first!=NULL&&second!=NULL)
       swap(first->data,second->data);
       return root;
    }
};
